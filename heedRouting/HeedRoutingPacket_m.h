//
// Generated file, do not edit! Created by opp_msgc 4.5 from src/node/communication/routing/heedRouting/HeedRoutingPacket.msg.
//

#ifndef _HEEDROUTINGPACKET_M_H_
#define _HEEDROUTINGPACKET_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0405
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "RoutingPacket_m.h"
// }}



/**
 * Enum generated from <tt>src/node/communication/routing/heedRouting/HeedRoutingPacket.msg</tt> by opp_msgc.
 * <pre>
 * enum HeedRoutingPacket_Type
 * {
 * 	HEED_ROUTING_ADV_PACKET 	= 1;		
 * 	HEED_ROUTING_JOIN_PACKET 	= 2;		
 * 	HEED_ROUTING_TDMA_PACKET 	= 3;		
 * 	HEED_ROUTING_DATA_PACKET 	= 4;
 * 	HEED_NEIGHBOURS_DISCOVERY_PACKET     = 5;
 * 
 * };
 * </pre>
 */
enum HeedRoutingPacket_Type {
    HEED_ROUTING_ADV_PACKET = 1,
    HEED_ROUTING_JOIN_PACKET = 2,
    HEED_ROUTING_TDMA_PACKET = 3,
    HEED_ROUTING_DATA_PACKET = 4,
    HEED_NEIGHBOURS_DISCOVERY_PACKET = 5
};

/**
 * Class generated from <tt>src/node/communication/routing/heedRouting/HeedRoutingPacket.msg</tt> by opp_msgc.
 * <pre>
 * packet HeedRoutingPacket extends RoutingPacket
 * {	
 * 	int HeedRoutingPacketKind enum (HeedRoutingPacket_Type);   
 * 	int schedule[];
 * 	int cost;
 * 	bool status;		
 * };
 * </pre>
 */
class HeedRoutingPacket : public ::RoutingPacket
{
  protected:
    int HeedRoutingPacketKind_var;
    int *schedule_var; // array ptr
    unsigned int schedule_arraysize;
    int cost_var;
    bool status_var;

  private:
    void copy(const HeedRoutingPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const HeedRoutingPacket&);

  public:
    HeedRoutingPacket(const char *name=NULL, int kind=0);
    HeedRoutingPacket(const HeedRoutingPacket& other);
    virtual ~HeedRoutingPacket();
    HeedRoutingPacket& operator=(const HeedRoutingPacket& other);
    virtual HeedRoutingPacket *dup() const {return new HeedRoutingPacket(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getHeedRoutingPacketKind() const;
    virtual void setHeedRoutingPacketKind(int HeedRoutingPacketKind);
    virtual void setScheduleArraySize(unsigned int size);
    virtual unsigned int getScheduleArraySize() const;
    virtual int getSchedule(unsigned int k) const;
    virtual void setSchedule(unsigned int k, int schedule);
    virtual int getCost() const;
    virtual void setCost(int cost);
    virtual bool getStatus() const;
    virtual void setStatus(bool status);
};

inline void doPacking(cCommBuffer *b, HeedRoutingPacket& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, HeedRoutingPacket& obj) {obj.parsimUnpack(b);}


#endif // _HEEDROUTINGPACKET_M_H_
